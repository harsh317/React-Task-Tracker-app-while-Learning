{"version":3,"sources":["components/buttons.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Buttons","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onClickbtn","PropAddTask","Task","task","onDelete","reminder","onDoubleClick","id","date","Tasks","tasks","map","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","marginTop","height","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchtasks","tasksserver","gettasks","fetch","res","json","data","console","log","fetchtask","addTask","method","headers","body","JSON","stringify","DeleteTask","filter","taskToToggle","updatedTaskToToggle","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a6154d0.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Buttons = ({color, text , onClick}) => {\r\n\r\n    return <button onClick={onClick} style={{backgroundColor:color}} className=\"btn\">{text}</button>\r\n}\r\n\r\nButtons.defaultProps = {\r\n    color: 'black'\r\n}\r\n\r\nButtons.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired,\r\n    OnClick: PropTypes.func,\r\n}\r\n\r\nexport default Buttons\r\n","import PropTypes from 'prop-types';\r\nimport Buttons from './buttons'\r\n\r\nconst Header = ({title,onClickbtn,PropAddTask}) => {\r\n    \r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            <Buttons color={PropAddTask ? \"red\" : \"green\"} text={PropAddTask ? \"Hide\" : \"Add\"} onClick={onClickbtn} />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n// Css in Js\r\n// const headingStyle = {\r\n//     color: 'red',\r\n//     backgroundColor:'black'\r\n// }\r\n\r\nexport default Header\r\n","import {FaTimes} from 'react-icons/fa'\r\nconst Task = ({task,onDelete,reminder}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder':''}`} onDoubleClick={()=>reminder(task.id)}>\r\n            <h3>{task.text} <FaTimes onClick={()=>onDelete(task.id)}/></h3>\r\n            <p>{task.date}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({tasks,onDelete,reminder}) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task)=>(\r\n            <Task key={task.id} task={task} onDelete={onDelete} reminder={reminder} />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import {useState} from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text,setText] = useState('')\r\n    const [date,setDay] = useState('')\r\n    const [reminder,setReminder] = useState(false) \r\n\r\n    const onSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(!text){\r\n            alert('Please Add Text')\r\n            return\r\n        }\r\n        \r\n        onAdd({text,date,reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}>   \r\n            <div className=\"form-control\">\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder='Add Task' value={text} onChange={(e)=> setText(e.target.value)}></input>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label>Day and time</label>\r\n                <input type=\"text\" placeholder='Add Date' value={date} onChange={(e)=> setDay(e.target.value)}></input>\r\n            </div>\r\n            <div className=\"form-control form-control-check\">\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\" value={reminder} onChange={(e)=> setReminder(e.target.checked)} checked={reminder}></input>\r\n            </div>\r\n            <input type=\"submit\" value=\"AddTask\" className=\"btn btn-block\"></input>\r\n            <hr style={{\r\n                backgroundColor: 'green',\r\n                marginTop:24,\r\n                height: 5\r\n            }}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","// import React from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport {useState,useEffect} from 'react';\n\nfunction App() {\n  const [showAddTask,setShowAddTask] = useState(false)\n  const [tasks,setTasks] = useState([])\n  useEffect(() => {\n    const gettasks = async () => {\n      const tasksserver = await fetchtasks()\n      setTasks(tasksserver)\n    }\n    gettasks()\n  },[])\n\n  const fetchtasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    console.log(data)\n    return data\n  }\n  const fetchtask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n    return data\n  }\n\n  const addTask = async (task) =>{\n    const res = await fetch('http://localhost:5000/tasks',{\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n    const data = await res.json()\n    setTasks([...tasks,data])\n  }\n\n  const DeleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`,{\n      method: 'DELETE',\n    })\n    setTasks(tasks.filter((task)=>task.id !== id))\n  }\n\n  const reminder = async (id) =>{\n    const taskToToggle  = await fetchtask(id)\n    const updatedTaskToToggle  = {...taskToToggle,reminder:!taskToToggle.reminder}\n    const res = await fetch(`http://localhost:5000/tasks/${id}`,{\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedTaskToToggle)\n    })\n    const data = await res.json()\n\n    setTasks(tasks.map((task)=>task.id === id ? {...task,reminder:data.reminder} : task))\n  }\n\n  return (\n    <div className=\"container\">\n      <Header onClickbtn={()=> setShowAddTask(!showAddTask)} PropAddTask={showAddTask}/>\n      {showAddTask ? <AddTask onAdd={addTask} /> : ''}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={DeleteTask} reminder={reminder} /> : 'No Tasks To Show'}\n    </div>\n  );\n}\n\n// class App extends React.Component {\n//   render(){\n//     return(\n//       <Header/>\n//     )\n//   }\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}